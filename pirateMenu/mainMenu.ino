const byte choiceFighter[] PROGMEM = {88,48,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x0,0x0,0x89,0x1E,0x7C,0x18,0x82,0x6F,0xE1,0x8F,0xC4,0x0,0x0,0x8B,0x9E,0x82,0x19,0x1,0x70,0x31,0xF0,0x24,0x0,0x0,0xBB,0x9F,0xF1,0x19,0x41,0x69,0x9B,0xF3,0xBC,0x0,0x0,0xC1,0x6,0x9,0x1B,0xF9,0xE9,0x9F,0xFB,0xBC,0x0,0x0,0xC0,0x7,0xEA,0x19,0x32,0x64,0x39,0xE4,0x94,0x0,0x0,0xBF,0xFE,0x3F,0x1A,0x2,0x71,0xFF,0xE4,0xC,0x0,0x0,0x9C,0x7F,0x7F,0x1A,0x20,0x7E,0x7F,0xB4,0x3C,0x0,0x0,0xBD,0xBE,0xF8,0x99,0xC1,0xF1,0xBF,0xAF,0x14,0x0,0x0,0xC0,0x27,0xC2,0x99,0x39,0xEA,0xB3,0xC7,0x8C,0x0,0x0,0xC2,0x26,0x5F,0x9A,0x79,0xF0,0x2B,0x87,0x8C,0x0,0x0,0xBE,0x7E,0x41,0xFC,0x3,0xF8,0x23,0x83,0xC,0x0,0x0,0xBF,0x77,0x40,0x3C,0x3,0x76,0x7F,0xE0,0xF4,0x0,0x0,0xF3,0xE7,0xD1,0xDC,0x4,0x68,0x77,0xE0,0x44,0x0,0x0,0xFF,0xE6,0xCF,0x1A,0xC,0x6C,0xB5,0x94,0xE4,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x8F,0xC6,0x30,0x58,0x60,0xFF,0xFF,0x83,0xC6,0x0,0x10,0x99,0xA6,0x40,0xF8,0x9C,0x67,0xF1,0x84,0x66,0x3F,0xD0,0x98,0x26,0x80,0x58,0x98,0xEF,0x6D,0x85,0x76,0x7F,0xD0,0xBB,0x76,0x80,0xF8,0xE0,0xF2,0xB,0x8B,0xAE,0xE0,0xD0,0xD8,0x17,0x0,0x5B,0xF0,0x76,0xDB,0x89,0x26,0xE0,0xD0,0xD8,0x37,0xFF,0xFC,0xF,0x72,0x97,0xBF,0xFE,0x71,0x90,0xE2,0xF,0x5D,0x18,0x0,0xEC,0xDD,0xC6,0x2E,0x31,0x90,0xE1,0xFF,0x55,0x18,0x0,0x7C,0x5,0x84,0xD6,0x13,0x10,0xE0,0x7,0xA2,0x38,0x2A,0xFE,0x9,0x84,0xD6,0x7,0x10,0x80,0x6,0xC1,0xF8,0xFF,0xFF,0xFD,0x82,0x16,0x6,0x10,0x81,0xE,0x80,0x1B,0xFF,0x7F,0xD,0x87,0x36,0x0,0x10,0x88,0xF6,0x5E,0x7F,0xF0,0x7C,0x9D,0x9C,0xE6,0x6,0x10,0x86,0xE,0x71,0x9F,0xFC,0x79,0x63,0xA1,0x86,0x6,0x10,0x81,0xF6,0xA1,0x98,0xAA,0x7C,0xE3,0xDF,0x6,0x0,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x0,0x0,0x81,0x26,0xE,0x1F,0xF0,0xE7,0xF1,0x8F,0xC4,0x0,0x0,0x86,0x3E,0x11,0x18,0xE,0xE8,0x9,0x90,0x34,0x0,0x0,0x8A,0x6,0x60,0x98,0x1,0xF4,0x5,0xB1,0xDC,0x0,0x0,0xB8,0xF6,0x6A,0x99,0xF8,0xFF,0xC5,0x9B,0x9C,0x0,0x0,0xE5,0x2E,0xE4,0xDF,0x86,0x6B,0x45,0xA0,0x1C,0x0,0x0,0xE5,0x2F,0xA,0x3F,0x71,0x79,0x9D,0xB6,0x1C,0x0,0x0,0xC5,0xF,0xFF,0xFE,0x6A,0xE0,0x25,0x93,0x3C,0x0,0x0,0xBF,0xF6,0x5D,0x9E,0x33,0xFC,0x5,0x97,0x3C,0x0,0x0,0xE0,0xE,0x5D,0x9F,0x4,0xF3,0x9D,0x88,0x7C,0x0,0x0,0xDB,0x67,0x42,0x9F,0xC1,0xF1,0xCD,0x8F,0x9C,0x0,0x0,0xDF,0xF6,0xB9,0x9E,0xD5,0xEB,0xCF,0x98,0x14,0x0,0x0,0xAD,0xB7,0xF7,0x1B,0x3F,0xEC,0x19,0xB2,0x3C,0x0,0x0,0x90,0x7,0xF1,0x99,0x81,0xEB,0x1,0xDF,0xFC,0x0,0x0,0x8F,0xFF,0xBF,0xD9,0xFF,0xF8,0xF,0x9F,0xFC,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x0,0x0,};

#define NB_ITEMS_MENU 16
int8_t selectedItem = 0;



void initMenu()
{
   selectedItem = 0;
}

void updateMenu()
{
     if(gb.buttons.pressed(BTN_A)){
        //loadGame();
        writeData();
        stateGame = 1;
         
    }
    
    if(gb.buttons.pressed(BTN_RIGHT)){
        selectedItem++;
        if(selectedItem >=NB_ITEMS_MENU)
        {
          selectedItem = 0;
        }
    }
    if(gb.buttons.pressed(BTN_LEFT)){
        selectedItem--;
        if(selectedItem <0)
        {
          selectedItem = (NB_ITEMS_MENU - 1);
        }
    }
    
    if(gb.buttons.pressed(BTN_UP)){
        selectedItem-=5;
        if(selectedItem <0)
        {
          selectedItem = (NB_ITEMS_MENU + selectedItem) - 1;
        }
        Serial.print(selectedItem);
    }
    if(gb.buttons.pressed(BTN_DOWN)){
      if(selectedItem == 10){
        selectedItem = 0;
      }
      else {
        selectedItem+=5;
        if(selectedItem >=NB_ITEMS_MENU)
        {
          selectedItem = (selectedItem - NB_ITEMS_MENU)+1;
        }
    }
  }
}

void drawMenu()
{
  gb.display.drawBitmap(0,0,choiceFighter);
  
  if(gb.frameCount % 10 >4){
    gb.display.setColor(INVERT);
    if(selectedItem == (NB_ITEMS_MENU - 1)){
      gb.display.drawRect(70,16,14,16); 
    }
    else {
      gb.display.drawRect(0 + ((selectedItem * 14)%70),0+ (((int)selectedItem/5) * 16),14,16); 
    }
    gb.display.setColor(BLACK); 
  }
}

void writeData()
{
  //return;//FOR simbuino test
    byte numChar = selectedItem%2; //if the number is 0 this is the first Char selected, else is the second
  
   // open the file for write at end like the Native SD library
  myFile = sd.open(BASE_NAME, O_RDWR|O_CREAT|O_TRUNC);
  if (!myFile) {
    sd.errorHalt("opening test.txt for write failed");
    gb.popup(F("ERROR SD"),10);
  }
  myFile.print('1');//on viens du menu
  myFile.println(numChar);//on a choisi un perso
  myFile.close();
  
}




